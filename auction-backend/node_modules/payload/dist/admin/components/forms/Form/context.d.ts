/// <reference types="react" />
import { Context, FormFieldsContext as FormFieldsContextType } from './types';
declare const FormContext: import("react").Context<Context>;
declare const FormWatchContext: import("react").Context<Context>;
declare const SubmittedContext: import("react").Context<boolean>;
declare const ProcessingContext: import("react").Context<boolean>;
declare const ModifiedContext: import("react").Context<boolean>;
declare const FormFieldsContext: import("use-context-selector").Context<FormFieldsContextType>;
declare const useForm: () => Context;
declare const useWatchForm: () => Context;
declare const useFormSubmitted: () => boolean;
declare const useFormProcessing: () => boolean;
declare const useFormModified: () => boolean;
declare const useFormFields: <Value = unknown>(selector: (context: FormFieldsContextType) => Value) => Value;
declare const useAllFormFields: () => FormFieldsContextType;
export { SubmittedContext, ProcessingContext, ModifiedContext, useFormSubmitted, useFormProcessing, useFormModified, useForm, FormContext, FormFieldsContext, useFormFields, useAllFormFields, FormWatchContext, useWatchForm, };
